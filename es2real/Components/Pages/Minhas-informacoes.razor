@page "/minhas-informacoes"

@inject UserSessionService UserSessionService
@inject NavigationManager Navigation

@rendermode InteractiveServer
<PageTitle>Minhas Informações</PageTitle>

<h1>Minhas Informações</h1>

@if (!carregando && usuarioLogado == null)
{
    <p class="text-danger text-center mt-5">Sessão expirada. Redirecionando...</p>
}
else if (!carregando && usuarioLogado != null)
{
    <div class="text-center">
        <p><strong>Email:</strong> @usuarioLogado.Email</p>
        <p><strong>Tipo de Usuário:</strong> @usuarioLogado.TipoUsuario</p>
    </div>
}
else
{
    <p class="text-center">Carregando...</p>
}

@code {
    private UtilizadorAuth? usuarioLogado;
    private bool carregando = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Recupera o usuário da sessão
            usuarioLogado = UserSessionService.GetUsuario();
            Console.WriteLine($"Usuário logado: {usuarioLogado?.Email ?? "Nenhum usuário encontrado"}");

            if (usuarioLogado == null || usuarioLogado.TipoUsuario != "Organizador")
            {
                // Redireciona para o login se não estiver logado ou não for Organizador
                await Task.Delay(1500);  // Aguarde um pouco para o usuário ver a mensagem de erro
            }
            else
            {
                // Se o usuário estiver logado e for Organizador, mostre as informações
                carregando = false;
                StateHasChanged(); // Atualiza a UI para mostrar as informações
            }
        }
    }
}