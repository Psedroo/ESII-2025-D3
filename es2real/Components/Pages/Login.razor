@page "/login"
@using System.Net.Http.Json
@using System.Text.Json
@using ES2Real.Data
@inject HttpClient Http
@inject UsuarioService usuarioService
@inject NavigationManager Navigation
@inject UserSessionService AuthStateProvider

<link rel="stylesheet" href="css/login.css" asp-append-version="true" />


@if (!string.IsNullOrEmpty(loginMessage))
{
    <p class="alert alert-success">@((MarkupString)loginMessage)</p>
}

@*<div class="container">
    <EditForm Model="userModel" OnValidSubmit="HandleLogin" FormName="Login">
        <DataAnnotationsValidator/>
        
        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="userModel.Email" required/>
        </div>

        <div class="form-group">
            <label>Password:</label>
            <InputText type="password" @bind-Value="userModel.Password" required/>
        </div>

        <button type="submit">Iniciar sessão</button>
    </EditForm>
</div>*@


<section class="vh-80 gradient-custom">
    <div class="container  h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card bg-dark text-white" style="border-radius: 1rem;">
                    <div class="card-body p-5 text-center">

                        <div class="mb-md-5 mt-md-4">
                            
                            <EditForm Model="userModel" OnValidSubmit="HandleLogin" FormName="Login">
                                <DataAnnotationsValidator/>
                                
                                <h2 class="fw-bold mb-2 text-uppercase">Login</h2>
                                <p class="text-white-50 mb-5">Please enter your login and password!</p>

                                <div data-mdb-input-init class="form-outline form-white mb-4">
                                    <InputText type="email" id="typeEmailX" class="form-control form-control-lg" @bind-Value="userModel.Email" required/>
                                    <label class="form-label" for="typeEmailX">Email</label>
                                </div>

                                <div data-mdb-input-init class="form-outline form-white mb-4">
                                    <InputText type="password" id="typePasswordX" class="form-control form-control-lg" @bind-Value="userModel.Password" required/>
                                    <label class="form-label" for="typePasswordX">Password</label>
                                </div>

                                <p class="small mb-3 pb-lg-2"><a class="text-white-50" href="#!">Forgot password?</a></p>

                                <button data-mdb-button-init data-mdb-ripple-init class="btn btn-outline-light btn-lg px-5" type="submit">Login</button>

                            </EditForm>

                            <div class="d-flex justify-content-center text-center">
                                <a href="#!" class="text-white"><i class="fab fa-facebook-f fa-lg"></i></a>
                                <a href="#!" class="text-white"><i class="fab fa-twitter fa-lg mx-4 px-2"></i></a>
                                <a href="#!" class="text-white"><i class="fab fa-google fa-lg"></i></a>
                            </div>

                        </div>

                        <div>
                            <p class="mb-0">Don't have an account? <a href="/registar" class="text-white-50 fw-bold">Sign Up</a>
                            </p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code { 
    [SupplyParameterFromForm]
    private UserLoginModel userModel { get; set; } = new();
    
    private string loginMessage = string.Empty;

    private async Task HandleLogin()
    {
        var usuario = await usuarioService.AuthenticateUserAsync(userModel.Email, userModel.Password);
        if (usuario != null)
        {
            AuthStateProvider.SetUsuario(usuario); // Store user in session service

            if (usuario.TipoUsuario == "Organizador")
                Navigation.NavigateTo("/organizador");
            else if (usuario.TipoUsuario == "Participante")
                Navigation.NavigateTo("/participante");
        }
        else
        {
            loginMessage = "<strong style='color:red;'>Login failed! Invalid email or password.</strong>";
            StateHasChanged();
        }
    }

    public class UserLoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}