@page "/registar"
@inject UsuarioService _usuarioService

<h3>Register</h3>

<EditForm Model="@userModel" OnValidSubmit="RegisterUser" FormName="registerForm1">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div>
        <label>Username:</label>
        <InputText @bind-Value="userModel.Username" />
    </div>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="userModel.Email" />
    </div>

    <div>
        <label>Password:</label>
        <InputText type="password" @bind-Value="userModel.Password" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@if (message is not null)
{
    <p>@message</p>
}

@code {
    private UserRegistrationModel userModel = new();
    private string message;

    private async Task RegisterUser()
    {
        try
        {
            var user = await _usuarioService.RegisterUserAsync(
                userModel.Username, userModel.Email, userModel.Password);

            if (user != null)
            {
                message = "Registration successful!";
            }
            else
            {
                message = "Error registering user.";
            }
        }
        catch (Exception ex)
        {
            message = $"An error occurred: {ex.Message}";
        }
    }

    public class UserRegistrationModel
    {
        public string Username { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}