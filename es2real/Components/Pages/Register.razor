@page "/registar"
@using System.Net.Http.Json
@using Microsoft.EntityFrameworkCore.Internal
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Registar</h3>

<p style="color:red">@Message</p>

<div>
    <label>Email:</label>
    <input @bind="Email" type="email" />
</div>
<div>
    <label>Username:</label>
    <input @bind="Username" type="text" />
</div>
<div>
    <label>Password:</label>
    <input @bind="Password" type="password" />
</div>
<a href="#" @onclick="HandleRegister" @onclick:preventDefault class="btn btn-primary">Register</a>
<a href="/login" class="btn btn-primary">Voltar ao Login</a>

@code {
    private string Email { get; set; } = "";
    private string Username { get; set; } = "";
    private string Password { get; set; } = "";
    private string Message { get; set; } = "";

    private async Task HandleRegister()
    {
        Message = "Processing...";
        StateHasChanged();

        var registerData = new { Email, Username, Password };
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/register", registerData);
            var responseText = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Status: {response.StatusCode}, Response: {responseText}");

            if (response.IsSuccessStatusCode)
            {
                Message = "Account created successfully! Redirecting to login...";
                await Task.Delay(2000);
                Navigation.NavigateTo("/login");
            }
            else
            {
                // Extract error message from response if available
                Message = $"Error creating account: {responseText}";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            Message = $"Error: {ex.Message}";
        }

        StateHasChanged();
    }
    
}