@page "/organizador"

@using ES2Real.Components.Layout
@inject UserSessionService UserSessionService
@inject NavigationManager Navigation
@inject UserSessionService AuthStateProvider

@rendermode InteractiveServer

<div class="container mt-5">
    @if (AuthStateProvider.UsuarioAtual != null)
    {
        <div class="text-center mb-4">
            <h2 class="fw-bold display-6">
                <i class="bi bi-clipboard-data text-success me-2"></i>
                Área do Organizador
            </h2>
            <p class="text-muted mb-1">
                Bem-vindo, <strong>@AuthStateProvider.UsuarioAtual.Username</strong>
            </p>
            <p class="text-muted">Email: @AuthStateProvider.UsuarioAtual.Email</p>
        </div>

        <div class="row row-cols-1 row-cols-md-3 g-4 justify-content text-center">
            <div class="col-md-4">
                <a href="/Eventos" class="btn btn-primary btn-lg w-100">Gerir Eventos</a>
            </div>
            <div class="col-md-4">
                <a href="/Participantes" class="btn btn-secondary btn-lg w-100">Gerir Participantes</a>
            </div>
            <div class="col-md-4">
                <a href="/Relatorios" class="btn btn-success btn-lg w-100">Relatórios</a>
            </div>
            <div class="col-md-4">
                <a href="/Minhas-informacoes" class="btn btn-secondary btn-lg w-100">Minhas Informações</a>
            </div>
        </div>
    }
    else
    {
        <p class="text-danger text-center">Nenhum utilizador autenticado.</p>
    }
</div>

@code {
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var usuarioLogado = AuthStateProvider.UsuarioAtual;

        if (usuarioLogado == null || usuarioLogado.TipoUsuario != "Organizador")
        {
            Navigation.NavigateTo("/login");
        }
    }
}
